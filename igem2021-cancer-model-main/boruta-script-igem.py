# -*- coding: utf-8 -*-
"""igem-boruta_script.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pPrL76YV3KbGn3naRNeLLPeaZf-87lzr
"""


from sklearn import preprocessing
import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from boruta import BorutaPy

#pip install boruta

#from google.colab import drive
#drive.mount('/content/drive')

#/home/guest/harshul_work/boruta_scripts_igem/TCGA-HNSC.htseq_fpkm.tsv
df = pd.read_csv("/home/guest/harshul_work/boruta_scripts_igem/TCGA-HNSC.htseq_fpkm.tsv", delimiter = '\t' , engine='python')
df2 = pd.read_csv("/home/guest/harshul_work/boruta_scripts_igem/TCGA-THCA.htseq_fpkm.tsv", delimiter = '\t' , engine='python')
df3 = pd.read_csv("/home/guest/harshul_work/boruta_scripts_igem/TCGA-THCA.htseq_fpkm.tsv", delimiter = '\t' , engine='python')

df_concat = pd.concat([df, df2,df3], axis=1)
data=df_concat.drop(['Ensembl_ID'], axis=1)
data.head()

data

data_T = data.transpose()
print(data_T.shape)
data_T = data_T.iloc[: , :]
data_T.head()

data_T['target'] = 0
print(data_T.shape)
data_T.iloc[:546,-1] = 1
data_T.iloc[545, -1]

X = data_T.iloc[:,:60483]

#X = X.astype(str)
# y = data_T[['target']]

#y.head()
#y.shape
X.reset_index(drop=True, inplace=True)
X.head()

y = data_T[['target']]
y.reset_index(drop=True, inplace=True)
y.head()

forest = RandomForestClassifier()

forest.fit(X, y)



feat_selector = BorutaPy(forest, n_estimators='auto', verbose=2, random_state=1)
feat_selector.fit(np.array(X), np.array(y))

# number of selected features
print('\n Number of selected features:')
print(feat_selector.n_features_)

print (feat_selector.ranking_)

#feature_df = pd.DataFrame( data_T, axis=1).columns.tolist(), columns=['features'])
#feature_df['rank']=feat_selector.ranking_
#feature_df = feature_df.sort_values('rank', ascending=True).reset_index(drop=True)
#print ('\n Top %d features:' % feat_selector.n_features_)
#print (feature_df.head(feat_selector.n_features_))
feature_df.to_csv('boruta-feature-ranking.csv', index=False)


###### RESULTS ##########

#Confirmed: 	700
#Tentative: 	11
#Rejected: 	59644
#[ 3669 16805 12451 ... 38690 16805 38690]
